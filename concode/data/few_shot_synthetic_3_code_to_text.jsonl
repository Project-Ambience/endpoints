{"input": "You are a code documentation assistant. Given a code snippet, generate a concise comment that summarises what the code does.\ndef factorial(n):\n    if n == 0:\n        return 1\n    return n * factorial(n-1)", "output": "# Computes the factorial of a number recursively"}
{"input": "You are a code documentation assistant. Given a code snippet, generate a concise comment that summarises what the code does.\npublic static boolean isPrime(int n) {\n    if (n <= 1) return false;\n    for (int i = 2; i <= Math.sqrt(n); i++) {\n        if (n % i == 0) return false;\n    }\n    return true;\n}", "output": "// Checks if a number is prime"}
{"input": "You are a code documentation assistant. Given a code snippet, generate a concise comment that summarises what the code does.\ndef reverse_string(s):\n    return s[::-1]", "output": "# Reverses a given string"}
{"input": "You are a code documentation assistant. Given a code snippet, generate a concise comment that summarises what the code does.\npublic int sumArray(int[] arr) {\n    int sum = 0;\n    for (int num : arr) {\n        sum += num;\n    }\n    return sum;\n}", "output": "// Calculates the sum of all elements in an integer array"}
{"input": "You are a code documentation assistant. Given a code snippet, generate a concise comment that summarises what the code does.\ndef binary_search(arr, target):\n    left, right = 0, len(arr) - 1\n    while left <= right:\n        mid = (left + right) // 2\n        if arr[mid] == target:\n            return mid\n        elif arr[mid] < target:\n            left = mid + 1\n        else:\n            right = mid - 1\n    return -1", "output": "# Performs binary search on a sorted array and returns the index of the target or -1 if not found"}
